DBLUN10
*SYSTEM
object_id double
flag int
name char[100]
short_name char[12]
creation_date char[10]
semantics_desc desc
technical_desc desc
sys_mo rel
sys_sch rel
link rel
user_viewable rel
viewable_note rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*META_OBJECT
object_id double
flag int
name char[100]
type short
semantics_desc desc
mo_mp rel
concept_mo rel
*META_PROPERTY
object_id double
flag int
name char[100]
type short
funct int
semantics_desc desc
*SCHEMA
object_id double
flag int
name char[100]
short_name char[12]
version char[16]
creation_date char[10]
last_update char[10]
lock char
type char
semantics_desc desc
technical_desc desc
trace_on int
from rel
to rel
is_in rel
sch_do rel
sch_col rel
sch_inst rel
owner_pu rel
user_viewable rel
viewable_note rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*ENTITY_TYPE
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
owner_att rel
owner_group rel
col_do2 rel
owner_pu rel
et_role1 rel
decomp rel
general rel
domain rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*REL_TYPE
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
owner_att rel
owner_group rel
col_do2 rel
owner_pu rel
rt_type rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*CO_ATTRIBUTE
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
min_rep unsigned int
max_rep unsigned int
set_type char
owner_att rel
owner_group rel
col_do2 rel
domain rel
at_ro_gr rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*SI_ATTRIBUTE
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
min_rep unsigned int
max_rep unsigned int
set_type char
stable char
recyclable char
type char
length unsigned int
decim short
owner_group rel
col_do2 rel
domain rel
at_ro_gr
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*ROLE
object_id double
flag int
name char[100]
min_con unsigned int
max_con unsigned int
aggregation char
semantics_desc desc
technical_desc desc
at_ro_gr
et_role2 rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*ET_ROLE
object_id double
flag int
*GROUP
object_id double
flag int
name char[100]
type char
funct int
min_rep unsigned int
max_rep unsigned int
semantics_desc desc
technical_desc desc
at_ro_gr
gr_comp rel
member_gr rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*COMPONENT
object_id double
flag int
*MEMBER_CST
object_id double
flag int
mem_role char
*CONSTRAINT
object_id double
flag int
type char
mbr_cst rel
go_uo rel
*COLLECTION
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
col_do1 rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*COL_DO
object_id double
flag int
*CLUSTER
object_id double
flag int
cluster_id char[100]
type int
criterion char[30]
special rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*SUB_TYPE
object_id double
flag int
value char[30]
go_uo rel
*USER_VIEW
object_id double
flag int
name char[100]
type int
zoom int
reduce int
xgrid int
ygrid int
font_size int
font_name char[30]
text_font_size int
text_font_name char[30]
markplan int
uv_uo rel
*USER_OBJECT
object_id double
flag int
posx int
posy int
color int
*CONNECTION
object_id double
flag int
type char[10]
seq_nbr int
*TEXT
object_id double
flag int
name char[100]
version char[16]
path char[260]
creation_date char[10]
last_update char[10]
type_of_file char[10]
num_line int
lock char
sem_desc desc
tech_desc desc
from rel
to rel
is_in rel
text_inst rel
line rel
user_viewable rel
viewable_note rel
go_uo rel
go_st rel
act_arg rel
go_nn_note rel
*LINE
object_id double
flag int
num int
description desc
go_uo rel
*PROD_SET
object_id double
flag int
name char[100]
version char[16]
creation_date char[10]
last_update char[10]
lock char
sem_desc desc
tech_desc desc
from rel
to rel
is_in rel
contains rel
set_inst rel
go_uo rel
*PROD_SET_ELEM
object_id double
flag int
*PROC_UNIT
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
type char
mode char
owner_group rel
col_do2 rel
p_decl rel
p_fct_call rel
invokes_pu rel
pu_made_of rel
cons_pu rel
go_st rel
act_arg rel
go_nn_note rel
go_uo rel
*ENVIRONMENT
object_id double
flag int
name char[100]
type char
mode char
semantics_desc desc
technical_desc desc
go_nn_note rel
go_uo rel
*STATE
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
owner_group rel
col_do2 rel
st_env rel
go_nn_note rel
go_uo rel
*ELEMENT
object_id double
flag int
type char
description desc
p_made_of rel
p_part_of rel
go_nn_note rel
go_uo rel
*REL_ELEMENT
object_id double
flag int
name char[100]
type char
mode char
semantics_desc desc
technical_desc desc
go_nn_note rel
go_uo rel
*P_EXPRESSION
object_id double
flag int
oper int
constant char[255]
description desc
sub_expression rel
go_uo rel
*CONSUMPTION
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
owner_group rel
col_do2 rel
cons_res rel
cons_role rel
cons_pu rel
go_st rel
act_arg rel
go_nn_note rel
go_uo rel
*CONS_PU
object_id double
flag int
name char[100]
min_card int
max_card int
semantics_desc desc
technical_desc desc
go_nn_note rel
go_uo rel
*CONS_RES
object_id double
flag int
name char[100]
min_card int
max_card int
semantics_desc desc
technical_desc desc
go_nn_note rel
go_uo rel
*CONS_ROLE
object_id double
flag int
name char[100]
min_card int
max_card int
semantics_desc desc
technical_desc desc
go_nn_note rel
go_uo rel
*RESOURCE
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
type char
owner_group rel
col_do2 rel
cons_res rel
cp_res rel
re_gen rel
re_spec rel
go_st rel
act_arg rel
go_nn_note rel
go_uo rel
*RES_ROLE
object_id double
flag int
name char[100]
short_name char[12]
semantics_desc desc
technical_desc desc
owner_group rel
col_do2 rel
cons_role rel
cp_rol rel
ro_gen rel
ro_spec rel
go_st rel
act_arg rel
go_nn_note rel
go_uo rel
*RE_ISA
object_id double
flag int
name char[100]
semantics_desc desc
technical_desc desc
go_nn_note rel
go_uo rel
*RO_ISA
object_id double
flag int
name char[100]
semantics_desc desc
technical_desc desc
go_nn_note rel
go_uo rel
*CAN_PLAY
object_id double
flag int
go_nn_note rel
go_uo rel
*DYNAMIC_PROPERTY
mp_id double
object_id double
value text
*METHODOLOGY
object_id double
title char[100]
version char[16]
date char[10]
author char[100]
help_file char[255]
semantics_desc desc
user_viewable rel
viewable_note rel
*STATEMENT
object_id double
type int
state char
glbtrsf trsfscr
sub_stmt rel
strategy rel
condition rel
stmt_param rel
pp_inst rel
ep_inst rel
cs_inst rel
*EXPRESSION
object_id double
type int
not char
weak char
sub_expression rel
cond_dec rel
expr_param rel
*PARAMETER
object_id double
integer int
string char[255]
analysis_expr anallist
type char
mode char
usage char
*PROCESS_TYPE
object_id double
name char[100]
title char[100]
explain char[100]
semantics_desc desc
perform rel
form_arg rel
invokes rel
*TOOLBOX
object_id double
name char[100]
title char[100]
functions list_int
semantics_desc desc
uses rel
*TEXT_TYPE
object_id double
name char[100]
title char[100]
weak char
min_mul int
max_mul int
usage char
semantics_desc desc
act_arg rel
ttext_inst rel
*SCHEMA_TYPE
object_id double
name char[100]
title char[100]
weak char
min_mul int
max_mul int
usage char
semantics_desc desc
act_arg rel
tschema_inst rel
*PROD_SET_TYPE
object_id double
name char[100]
title char[100]
min_mul int
max_mul int
usage char
semantics_desc desc
actarg rel
tset_inst rel
*TEXT_MODEL
object_id double
name char[100]
title char[100]
semantics_desc desc
default_ext list_char[3]
grammar char[255]
model_expr rel
specialization rel
text_conform rel
*SCHEMA_MODEL
object_id double
name char[100]
title char[100]
semantics_desc desc
constraints anallist
model_expr rel
specialization rel
schema_conform rel
have_concept rel
*MOD_CONCEPT
object_id double
contextual_name char[100]
funct1 unsigned int
funct2 unsigned int
*ENGINEERING_PROCESS
object_id double
name char[100]
start_date char[10]
start_time char[10]
end_date char[10]
end_time char[10]
in_progress char
semantics_desc desc
flag int
io_proc rel
made_of rel
start rel
user_viewable rel
viewable_note rel
go_uo rel
go_nn_note rel
*DECISION
object_id double
name char[100]
start_date char[10]
start_time char[10]
end_date char[10]
end_time char[10]
in_progress char
yes_no char
semantics_desc desc
flag int
io_proc rel
go_uo rel
go_nn_note rel
*PRIMITIVE_PROCESS
object_id double
name char[100]
start_date char[10]
start_time char[10]
end_date char[10]
end_time char[10]
in_progress char
semantics_desc desc
flag int
io_proc rel
go_uo rel
go_nn_note rel
*CONTROL_STRUCTURE
object_id double
name char[100]
start_date char[10]
start_time char[10]
end_date char[10]
end_time char[10]
in_progress char
golist list_int
semantics_desc desc
io_proc rel
*SCHEMA_INSTANCE
object_id double
usage char
checkpoint char[100]
flag int
go_nn_note rel
*TEXT_INSTANCE
object_id double
usage char
checkpoint char[100]
flag int
go_nn_note rel
*PROD_SET_INSTANCE
object_id double
usage char
checkpoint char[100]
flag int
go_nn_note rel
*NOTE
object_id double
flag int
description desc
note_nn_note rel
go_uo rel
*NN_NOTE
object_id double
flag int
*LOG
schema double
length long
text FILE
*
*0
0
0
PROJECT

20210101


2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
-
71
-
63
-
1
-
-
-
-
-
-
*1
2
0
Project
1

-
-
*1
3
0
Schema
2

22
23
-
-
*1
4
0
Text
31

24
25
-
-
*1
5
0
Product set
41

26
-
-
*1
6
0
Entity type
11

28
27
-
-
*1
7
0
Rel-type
12

30
29
-
-
*1
8
0
Atomic attribute
7

38
37
36
35
34
33
-
-
*1
9
0
Compound attribute
6

40
39
-
-
*1
10
0
Group
16

44
43
-
-
*1
11
0
Role
14

32
31
-
-
*1
12
0
Collection
4

41
42
-
-
*1
13
0
Processing unit
40

46
45
-
-
*1
14
0
Processing unit relation
45

62
61
-
-
*1
15
0
Association
47

54
53
-
-
*1
16
0
Use case association role
68

56
55
-
-
*1
17
0
Actor association role
66

58
57
-
-
*1
18
0
Actor
48

50
49
-
-
*1
19
0
Actor generalization
62

52
51
-
-
*1
20
0
State
61

59
60
-
-
*1
21
0
In-out
43

48
47
-
-
*2
23
0
Stereotype
86
14

*2
22
0
productType
86
6
#VALUES=
COBOL
CODASYL
IMS
Relational
SQL
XML
C/C++
Java
#
*2
25
0
Stereotype
86
14

*2
24
0
productType
86
6
#VALUES=
COBOL
CODASYL
IMS
Relational
SQL
XML
C/C++
Java
#
*2
26
0
Stereotype
86
14

*2
27
0
Stereotype
86
14

*2
28
0
MappingOID
78
10

*2
29
0
Stereotype
86
14

*2
30
0
MappingOID
78
10

*2
33
0
Value constraint
86
10

*2
34
0
Stereotype
86
14

*2
35
0
physType
86
2

*2
36
0
physLen
78
2

*2
37
0
MappingOID
78
10

*2
38
0
Default value
86
2

*2
39
0
Stereotype
86
14

*2
40
0
MappingOID
78
10

*2
43
0
User-constraint
86
1

*2
44
0
MappingOID
78
10

*2
31
0
Stereotype
86
14

*2
32
0
MappingOID
78
10

*2
42
0
MappingOID
78
10

*2
41
0
Stereotype
86
14
#VALUES=
Area
DBD
SQLSchema
SubSchema
TableSpace
#
*2
45
0
Stereotype
86
14

*2
46
0
MappingOID
78
10

*2
61
0
Stereotype
86
14

*2
62
0
MappingOID
78
10

*2
53
0
Stereotype
86
14

*2
54
0
MappingOID
78
10

*2
55
0
Stereotype
86
14

*2
56
0
MappingOID
78
10

*2
57
0
Stereotype
86
14

*2
58
0
MappingOID
78
10

*2
49
0
Stereotype
86
14

*2
50
0
MappingOID
78
10

*2
51
0
Stereotype
86
14

*2
52
0
MappingOID
78
10

*2
60
0
MappingOID
78
10

*2
59
0
Stereotype
86
14
#VALUES=
ET
RT
Att
Coll
#
*2
47
0
Stereotype
86
14

*2
48
0
MappingOID
78
10

*3
71
256
SCHEMA

1
20210101
20210806
F
E


0
-
-
-
79
103
123
125
145
147
101
81
109
111
119
139
141
105
83
115
117
129
131
135
133
93
85
-
-
72
74
77
-
-
73
-
161
167
170
-
78
155
-
-
-
161
167
170
-
*4
79
0
A



-
-
-
-
97
-
-
-
-
80
-
-
-
-
*4
81
0
B



-
-
-
-
95
89
-
-
-
-
82
-
-
-
-
*4
83
0
C



-
-
-
-
87
-
-
-
-
84
-
-
-
-
*4
101
0
A|1



103
109
-
-
-
-
-
-
-
-
102
-
-
-
-
*4
105
0
B|1



119
123
129
-
-
-
-
-
-
-
-
106
-
-
-
-
*4
133
0
C|1



135
139
-
-
-
-
-
-
-
-
134
-
-
-
-
*5
85
0
R2



-
-
-
-
86
88
-
90
-
-
-
-
*5
93
0
R1



-
-
-
-
94
96
-
98
-
-
-
-
*7
103
0
a



1
1
S
F
T
A
1
0
-
-
-
-
104
-
-
-
-
*6
109
0
B



1
1
S
111
115
-
-
-
-
-
110
-
-
-
-
*7
111
0
b



1
1
S
F
T
A
1
0
-
-
-
-
112
-
-
-
-
*6
115
0
C



1
1
S
117
-
-
-
-
-
116
-
-
-
-
*7
117
0
c



1
1
S
F
T
A
1
0
-
-
-
-
118
-
-
-
-
*7
119
0
b



1
1
S
F
T
A
1
0
-
-
-
-
120
-
-
-
-
*6
123
0
A



0
N
S
125
-
-
-
-
-
124
-
-
-
-
*7
125
0
a



1
1
S
F
T
A
1
0
-
-
-
-
126
-
-
-
-
*6
129
0
C



1
1
S
131
-
-
-
-
-
130
-
-
-
-
*7
131
0
c



1
1
S
F
T
A
1
0
-
-
-
-
132
-
-
-
-
*7
135
0
c



1
1
S
F
T
A
1
0
-
-
-
-
136
-
-
-
-
*6
139
0
B



0
N
S
141
145
-
-
-
-
-
140
-
-
-
-
*7
141
0
b



1
1
S
F
T
A
1
0
-
-
-
-
142
-
-
-
-
*6
145
0
A



0
N
S
147
-
-
-
-
-
146
-
-
-
-
*7
147
0
a



1
1
S
F
T
A
1
0
-
-
-
-
148
-
-
-
-
*8
88
0
b2
1
1
 


-
89
-
92
-
-
-
-
*8
86
0
c
0
N
 


-
87
-
91
-
-
-
-
*8
96
0
a
1
1
 


-
97
-
100
-
-
-
-
*8
94
0
b
0
N
 


-
95
-
99
-
-
-
-
*9
97
0
*9
89
0
*9
95
0
*9
87
0
*18
64
0

0
100
100
0
0
0

0

1
-
*18
69
0

23
100
100
0
0
0

0

1
70
155
156
-
*18
73
0

23
100
100
0
0
0

0

1
78
80
82
84
90
91
92
98
99
100
102
104
106
110
112
116
118
120
124
126
130
132
134
136
140
142
146
148
162
168
171
-
*18
1
0

23
100
100
0
0
0

0

1
-
*19
171
0
57500
240200
0
*19
168
0
80400
169700
0
*19
156
0
30000
14000
0
*19
70
0
100000
10000
0
*19
162
0
90100
100100
0
*19
91
0
105650
22550
0
*19
92
0
84650
22550
0
*19
99
0
59007
22550
0
*19
100
0
40137
22550
0
*19
104
0
0
0
0
*19
110
0
0
0
0
*19
112
0
0
0
0
*19
116
0
0
0
0
*19
118
0
0
0
0
*19
120
0
0
0
0
*19
124
0
0
0
0
*19
126
0
0
0
0
*19
130
0
0
0
0
*19
132
0
0
0
0
*19
136
0
0
0
0
*19
140
0
0
0
0
*19
142
0
0
0
0
*19
146
0
0
0
0
*19
148
0
0
0
0
*19
90
0
95150
22550
0
*19
98
0
49572
22550
0
*19
80
0
29800
22550
0
*19
82
0
71100
22550
0
*19
84
0
119200
22550
0
*19
102
0
40300
44850
0
*19
106
0
18500
45050
0
*19
134
0
64100
44250
0
*19
155
0
30000
29000
0
*19
78
0
32000
4000
0
*40
28
79
79
*40
28
81
81
*40
28
83
83
*40
28
101
101
*40
28
105
105
*40
28
133
133
*40
30
85
85
*40
30
93
93
*40
37
103
103
*40
37
111
111
*40
37
117
117
*40
37
119
119
*40
37
125
125
*40
37
131
131
*40
37
135
135
*40
37
141
141
*40
37
147
147
*40
40
109
107
*40
40
115
113
*40
40
123
121
*40
40
129
127
*40
40
139
137
*40
40
145
143
*40
32
88
88
*40
32
86
86
*40
32
96
96
*40
32
94
94
*41
63


20210101



64
-
-
*42
66
13
0
-
-
67
-
-
-
-
-
-
*42
75
18
0
-
-
-
-
-
76
-
-
-
*45
67
No_method
No method


63
-
-
-
*46
65
Everything
Do whatever you want
14001
-

66
-
*53
68
PROJECT
20210101
000004


T

0
72
74
-
76
-
63
-
69
-
-
70
-
-
*55
76
New schema
20210101
000013
20210101
000013
F

0
77
-
156
-
-
*57
72
C

0
-
*57
74
n

0
-
*57
77
o

0
-
*60
169
0
insertR1 (prevCall, List<Document> prevDocuments) {
buildForACollDocuments(prevDocuments);
buildForBCollDocuments(prevDocuments);



insertR2(documents, "R1", prevDocuments);

insertIntoTableA
insertIntoTableB

if(prevCall == null)
insertDocuments(prevDocuments)

}
170
-
171
-
*60
166
0
insertR 
 1.Traitement d'objets embedded complexes. (cf conditions ascendantes et descendantes , cf AlgoInsertPart2)
 2. Si objets complexes. Construction d'un objet partiel que l'on passe aux appels insertRi
3. Vérification de l'existence de R2 liée à une entité de R , avec un role 1-1 
 4. Appel à insertR2 si existe. Récursivement sur R2 également. 
  5. Si non , insert 'classiques' , cf AlgoPart1. InsertEInStruct, ...
6. Vérifier que l'appel courant est le premier appel à insertR, persister les objets complexes complétés.
167
-
168
-
*60
160
0
Soit a un attribut embedded appartenant à coll tel que a est mappé au rôle r appartenant à R(E1, E2) et partant de E1, 
un insertR pourra avoir lieu dans coll, via l'algorithme classique, SSI:

1) vérification descendante: 
il n'existe pas d'attribut b mappé à s, 
un rôle obligatoire de E2 appartenant à R' (tel que b est à l'intérieur de a -- on pense qu'il n'y a pas besoin)

2) vérification ascendante:
il n'existe pas d'attribut b 
(tel que a est à l'intérieur de b -- on pense qu'il n'y a pas besoin)
 mappé à un rôle s dont le rôle 
opposé appertient à E1 et est facultatif (car ça ne provoquerait pas l'appel récursif de l'algo de base) 



161
-
162
-
*62
71
21
*POT "begin-file"

