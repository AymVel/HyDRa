[comment encoding = UTF-8 /]
[module generateRelationshipTypeClass('http://www.unamur.be/polystore/Pml')]
[import be::unamur::polystore::acceleo::main::util /]
[import be::unamur::polystore::acceleo::main::services::generateRelationshipTypeServices /]
[import be::unamur::polystore::acceleo::main::impl::generateRelationshipTypeServicesImpl /]

 [query public isRelationshipTypeComplex(rel : RelationshipType) : Boolean = rel.attributes->size() > 0 or rel.roles->size() > 2 /]

[template public generateAllLevelsRelationshipTypeClass(rel: RelationshipType, conceptualSchema: ConceptualSchema)]
[generateRelationshipTypeServices(rel, conceptualSchema) /]
[generateRelationshipTypeServicesImpl(rel, conceptualSchema) /]
[/template]

[template public generateRelationshipTypePojoClass(rel : RelationshipType, conceptualSchema: ConceptualSchema)]
[if (true or isRelationshipTypeComplex(rel))]
[file ('src/main/java/pojo/' + rel.name.toUpperFirst().concat('.java'), false, 'UTF-8')]
package pojo;

public class [rel.name.toUpperFirst() /] extends LoggingPojo {

[for (role: Role | rel.roles)]
	private [role.entity.name.toUpperFirst()/] [role.name/];	
[/for]
[for (attr: Attribute | rel.attributes)]
	private [generateJavaType(attr.type)/] [attr.name/];	
[/for]

	public [rel.name.toUpperFirst() /]() {}

[for (role: Role | rel.roles)]
	public [role.entity.name.toUpperFirst()/] _get[role.name.toUpperFirst()/]() {
		return [role.name/];
	}	

	public void _set[role.name.toUpperFirst()/]([role.entity.name.toUpperFirst()/] [role.name/]) {
		this.[role.name/] = [role.name/];
	}
	
[/for]
[for (attr: Attribute | rel.attributes)]
	public [generateJavaType(attr.type)/] get[attr.name.toUpperFirst()/]() {
		return [attr.name/];
	}

	public void set[attr.name.toUpperFirst()/]([generateJavaType(attr.type)/] [attr.name/]) {
		this.[attr.name/] = [attr.name/];
	}
	
[/for]



}
[/file]	
[/if]
[/template]
