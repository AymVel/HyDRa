[comment encoding = UTF-8 /]
[module generateEntityTypeServicesImpl('http://www.unamur.be/polystore/Pml')]

[import be::unamur::polystore::acceleo::main::services::generateEntityTypeServices /]
[import be::unamur::polystore::acceleo::main::util /]


[template public generateEntityTypeServicesImpl(entityType : EntityType, conceptualSchema: ConceptualSchema)]
[file ('src/main/java/dao/impl/' + entityType.name.toUpperFirst() + 'ServiceImpl'.concat('.java'), false, 'UTF-8')]
package dao.impl;

import java.util.List;
import pojo.[entityType.name.toUpperFirst() /];
import conditions.*;
import dao.services.[entityType.name.toUpperFirst() + 'Service' /];
import util.Util;
import org.apache.commons.lang3.tuple.ImmutablePair;
import org.apache.commons.lang3.tuple.Pair;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Encoders;
import org.apache.spark.sql.Row;
import org.apache.spark.api.java.function.MapFunction;
import java.util.regex.Pattern;
import java.util.regex.Matcher;
import org.apache.spark.sql.SparkSession;
import org.apache.spark.api.java.JavaSparkContext;
import com.mongodb.spark.MongoSpark;
import org.bson.Document;
import static java.util.Collections.singletonList;
import dbconnection.SparkConnectionMgr;
import dbconnection.DBConnectionMgr;
import scala.collection.mutable.WrappedArray;
import org.apache.spark.api.java.function.FlatMapFunction;
import org.apache.spark.api.java.function.FilterFunction;
import java.util.ArrayList;
import org.apache.commons.lang.mutable.MutableBoolean;
import tdo.*;
import pojo.*;

public class [entityType.name.toUpperFirst() + 'ServiceImpl' /] extends [entityType.name.toUpperFirst() + 'Service' /] {
	[instantiateLogger(entityType.name.toUpperFirst() + 'ServiceImpl') /]
	[printSelectMethods(entityType, conceptualSchema, true) /]
	[printInsertMethods(entityType, conceptualSchema, true) /]
	[printUpdateMethods(entityType, conceptualSchema, true) /]
	[printDeleteMethods(entityType, conceptualSchema, true) /]
}
[/file]
[/template]
