[comment encoding = UTF-8 /]
[module generateRelationshipTypeServicesImpl('http://www.unamur.be/polystore/Pml')]
[import be::unamur::polystore::acceleo::main::services::select::relationshiptype::generateSelectMethods /]
[import be::unamur::polystore::acceleo::main::services::insert::relationshiptype::generateInsertMethods /]
[import be::unamur::polystore::acceleo::main::services::update::relationshiptype::generateUpdateMethods /]
[import be::unamur::polystore::acceleo::main::services::delete::relationshiptype::generateDeleteMethods /]
[import be::unamur::polystore::acceleo::main::util /]

[template public generateRelationshipTypeServicesImpl(rel: RelationshipType, conceptualSchema: ConceptualSchema)]
[file ('src/main/java/dao/impl/' + rel.name.toUpperFirst() + 'ServiceImpl'.concat('.java'), false, 'UTF-8')]
package dao.impl;

import org.apache.spark.sql.Dataset;
import conditions.Condition;
[for (role : Role | rel.roles)]
import tdo.[role.entity.name.toUpperFirst() /]TDO;
import pojo.[role.entity.name.toUpperFirst() /];
import conditions.[role.entity.name.toUpperFirst() /]Attribute;
[/for]
import java.util.List;
import java.util.ArrayList;
import org.apache.spark.api.java.function.MapFunction;
import org.apache.spark.sql.Encoders;
import org.apache.spark.api.java.function.FilterFunction;
import org.apache.commons.lang.mutable.MutableBoolean;
import util.Util;
import org.apache.commons.lang3.tuple.ImmutablePair;
import org.apache.commons.lang3.tuple.Pair;
import org.apache.spark.sql.Row;
import java.util.regex.Pattern;
import java.util.regex.Matcher;

public class [rel.name.toUpperFirst() + 'ServiceImpl' /] extends dao.services.[rel.name.toUpperFirst() + 'Service' /] {
	[instantiateLogger(rel.name.toUpperFirst() + 'ServiceImpl') /]
	[generateSelectMethods(rel, true) /]
	[generateInsertMethods(rel, true) /]
	[generateUpdateMethods(rel, true) /]
	[generateDeleteMethods(rel, true) /]
}
[/file]
[/template]
