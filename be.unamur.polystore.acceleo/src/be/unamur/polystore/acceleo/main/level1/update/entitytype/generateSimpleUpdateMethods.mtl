[comment encoding = UTF-8 /]
[module generateSimpleUpdateMethods('http://www.unamur.be/polystore/Pml')]

[import be::unamur::polystore::acceleo::main::util /]

[template public generateSimpleUpdateMethods(entityType: EntityType, conceptualSchema: ConceptualSchema)]
public abstract void update[entityType.name.toUpperFirst() /]List(conditions.Condition<conditions.[entityType.name.toUpperFirst() /]Attribute> condition, conditions.SetClause<conditions.[entityType.name.toUpperFirst() /]Attribute> set);

public void update[entityType.name.toUpperFirst() /](pojo.[entityType.name.toUpperFirst() /] [entityType.name.toLower() /]) {
	//TODO using the id
	return;
}
[for (role: Role | getRolesFromEntityType(entityType, conceptualSchema))]
public abstract void update[role.name.toUpperFirst() /]ListIn[getRelationShipType(role).name.toUpperFirst() /](
	[for(role2: Role | getRelationShipType(role).roles)]	conditions.Condition<conditions.[role2.entity.name.toUpperFirst()/]Attribute> [role2.name.toLowerFirst()/]_condition,
	[/for]
	[if (getRelationShipType(role).attributes->size() > 0)]conditions.Condition<conditions.[getRelationShipType(role).name.toUpperFirst() /]Attribute> [getRelationShipType(role).name.toLowerFirst() /],[/if]
	conditions.SetClause<conditions.[role.entity.name.toUpperFirst()/]Attribute> set
);

[for (role2: Role | getRelationShipType(role).roles)]
public void update[role.name.toUpperFirst() /]ListIn[getRelationShipType(role).name.toUpperFirst() /]By[role2.name.toUpperFirst() /]Condition(
	conditions.Condition<conditions.[role2.entity.name.toUpperFirst()/]Attribute> [role2.name/]_condition,
	conditions.SetClause<conditions.[role.entity.name.toUpperFirst() /]Attribute> set
){
	update[role.name.toUpperFirst() /]ListIn[getRelationShipType(role).name.toUpperFirst() /]([getListOfNullValues(i - 1) /][if(i - 1 > 0)], [/if][role2.name/]_condition[getListOfNullValues(getRelationShipType(role).roles->size() -  i, true) /][if (getRelationShipType(role).attributes->size() > 0)], null[/if], set);
}
[if (role2 <> role)]

public void update[role.name.toUpperFirst() /][if (isMaxOne(role2) = false)]List[/if]In[getRelationShipType(role).name.toUpperFirst() /]By[role2.name.toUpperFirst() /](
	pojo.[role2.entity.name.toUpperFirst()/] [role2.name/],
	conditions.SetClause<conditions.[role.entity.name.toUpperFirst() /]Attribute> set 
){
	//TODO get id in condition
	return;	
}

[/if]
[/for]
[if (getRelationShipType(role).attributes->size() > 0)]
public void update[role.name.toUpperFirst() /]ListIn[getRelationShipType(role).name.toUpperFirst() /]By[getRelationShipType(role).name.toUpperFirst() /]Condition(
	conditions.Condition<conditions.[getRelationShipType(role).name.toUpperFirst()/]Attribute> [getRelationShipType(role).name/]_condition,
	conditions.SetClause<conditions.[role.entity.name.toUpperFirst()/]Attribute> set
){
	update[role.name.toUpperFirst() /]ListIn[getRelationShipType(role).name.toUpperFirst() /]([getListOfNullValues(getRelationShipType(role).roles->size()) /], [getRelationShipType(role).name/]_condition, set);
}
[/if]
[/for]

[/template]
