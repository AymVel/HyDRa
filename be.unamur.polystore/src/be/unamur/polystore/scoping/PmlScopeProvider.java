/*
 * generated by Xtext 2.23.0
 */
package be.unamur.polystore.scoping;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;

import be.unamur.polystore.pml.MappingRule;
import be.unamur.polystore.pml.PmlPackage;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class PmlScopeProvider extends AbstractPmlScopeProvider {

	@Override
	public IScope getScope(EObject context, EReference reference) {
		if (context instanceof MappingRule) {
			MappingRule rule = EcoreUtil2.getContainerOfType(context, MappingRule.class);
			if(reference == PmlPackage.Literals.MAPPING_RULE__ATTRIBUTES_CONCEPTUAL) {
				return Scopes.scopeFor(rule.getEntityConceptual().getAttributes());
			}
//			if(reference == PmlPackage.Literals.MAPPING_RULE__PHYSICAL_FIELDS) {
//				return Scopes.scopeFor(rule.getPhysicalStructure().getFields());
//			}
		}

		return super.getScope(context, reference);
	}
}
